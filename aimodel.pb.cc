// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aimodel.proto

#include "aimodel.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr Env_Entity_Dof::Env_Entity_Dof(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lat_(0)
  , lon_(0)
  , height_(0)
  , phi_(0)
  , theta_(0)
  , psi_(0){}
struct Env_Entity_DofDefaultTypeInternal {
  constexpr Env_Entity_DofDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Env_Entity_DofDefaultTypeInternal() {}
  union {
    Env_Entity_Dof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Env_Entity_DofDefaultTypeInternal _Env_Entity_Dof_default_instance_;
constexpr Env_Entity_Velocity3D::Env_Entity_Velocity3D(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vel_north_(0)
  , vel_east_(0)
  , vel_down_(0){}
struct Env_Entity_Velocity3DDefaultTypeInternal {
  constexpr Env_Entity_Velocity3DDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Env_Entity_Velocity3DDefaultTypeInternal() {}
  union {
    Env_Entity_Velocity3D _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Env_Entity_Velocity3DDefaultTypeInternal _Env_Entity_Velocity3D_default_instance_;
constexpr Env_Entity::Env_Entity(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dof_(nullptr)
  , vel_(nullptr)
  , id_(0){}
struct Env_EntityDefaultTypeInternal {
  constexpr Env_EntityDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Env_EntityDefaultTypeInternal() {}
  union {
    Env_Entity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Env_EntityDefaultTypeInternal _Env_Entity_default_instance_;
constexpr Env_Missle::Env_Missle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dist_(0)
  , dir_(0)
  , id_(0){}
struct Env_MissleDefaultTypeInternal {
  constexpr Env_MissleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Env_MissleDefaultTypeInternal() {}
  union {
    Env_Missle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Env_MissleDefaultTypeInternal _Env_Missle_default_instance_;
constexpr Env_Goal::Env_Goal(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lat_(0)
  , lon_(0)
  , height_(0){}
struct Env_GoalDefaultTypeInternal {
  constexpr Env_GoalDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Env_GoalDefaultTypeInternal() {}
  union {
    Env_Goal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Env_GoalDefaultTypeInternal _Env_Goal_default_instance_;
constexpr Env::Env(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : self_(nullptr)
  , goal_(nullptr)
  , enemy_(nullptr)
  , missle_(nullptr)
  , red_crash_(false)
  , blue_crash_(false)
  , radar_on_(false)
  , detect_enemy_(false)
  , detect_missle_(false)
  , num_wpn_(0){}
struct EnvDefaultTypeInternal {
  constexpr EnvDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EnvDefaultTypeInternal() {}
  union {
    Env _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EnvDefaultTypeInternal _Env_default_instance_;
constexpr Action_TrajPoint::Action_TrajPoint(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lat_(0)
  , lon_(0)
  , h_(0)
  , vel_(0)
  , ref_phi_(0){}
struct Action_TrajPointDefaultTypeInternal {
  constexpr Action_TrajPointDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Action_TrajPointDefaultTypeInternal() {}
  union {
    Action_TrajPoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Action_TrajPointDefaultTypeInternal _Action_TrajPoint_default_instance_;
constexpr Action::Action(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : point_(nullptr)
  , isreset_(false)
  , deploy_(false)
  , target_id_(0){}
struct ActionDefaultTypeInternal {
  constexpr ActionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ActionDefaultTypeInternal() {}
  union {
    Action _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ActionDefaultTypeInternal _Action_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_aimodel_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_aimodel_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_aimodel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_aimodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Dof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Dof, lat_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Dof, lon_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Dof, height_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Dof, phi_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Dof, theta_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Dof, psi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Velocity3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Velocity3D, vel_north_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Velocity3D, vel_east_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity_Velocity3D, vel_down_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Env_Entity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Env_Entity, dof_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity, vel_),
  PROTOBUF_FIELD_OFFSET(::Env_Entity, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Env_Missle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Env_Missle, id_),
  PROTOBUF_FIELD_OFFSET(::Env_Missle, dist_),
  PROTOBUF_FIELD_OFFSET(::Env_Missle, dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Env_Goal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Env_Goal, lat_),
  PROTOBUF_FIELD_OFFSET(::Env_Goal, lon_),
  PROTOBUF_FIELD_OFFSET(::Env_Goal, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Env, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Env, red_crash_),
  PROTOBUF_FIELD_OFFSET(::Env, blue_crash_),
  PROTOBUF_FIELD_OFFSET(::Env, radar_on_),
  PROTOBUF_FIELD_OFFSET(::Env, detect_enemy_),
  PROTOBUF_FIELD_OFFSET(::Env, detect_missle_),
  PROTOBUF_FIELD_OFFSET(::Env, self_),
  PROTOBUF_FIELD_OFFSET(::Env, num_wpn_),
  PROTOBUF_FIELD_OFFSET(::Env, goal_),
  PROTOBUF_FIELD_OFFSET(::Env, enemy_),
  PROTOBUF_FIELD_OFFSET(::Env, missle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Action_TrajPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Action_TrajPoint, lat_),
  PROTOBUF_FIELD_OFFSET(::Action_TrajPoint, lon_),
  PROTOBUF_FIELD_OFFSET(::Action_TrajPoint, h_),
  PROTOBUF_FIELD_OFFSET(::Action_TrajPoint, vel_),
  PROTOBUF_FIELD_OFFSET(::Action_TrajPoint, ref_phi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Action, isreset_),
  PROTOBUF_FIELD_OFFSET(::Action, point_),
  PROTOBUF_FIELD_OFFSET(::Action, deploy_),
  PROTOBUF_FIELD_OFFSET(::Action, target_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Env_Entity_Dof)},
  { 11, -1, sizeof(::Env_Entity_Velocity3D)},
  { 19, -1, sizeof(::Env_Entity)},
  { 27, -1, sizeof(::Env_Missle)},
  { 35, -1, sizeof(::Env_Goal)},
  { 43, -1, sizeof(::Env)},
  { 58, -1, sizeof(::Action_TrajPoint)},
  { 68, -1, sizeof(::Action)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Env_Entity_Dof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Env_Entity_Velocity3D_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Env_Entity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Env_Missle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Env_Goal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Env_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Action_TrajPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Action_default_instance_),
};

const char descriptor_table_protodef_aimodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\raimodel.proto\"\305\004\n\003Env\022\021\n\tred_crash\030\001 \001"
  "(\010\022\022\n\nblue_crash\030\002 \001(\010\022\020\n\010radar_on\030\003 \001(\010"
  "\022\024\n\014detect_enemy\030\004 \001(\010\022\025\n\rdetect_missle\030"
  "\005 \001(\010\022\031\n\004self\030\006 \001(\0132\013.Env.Entity\022\017\n\007num_"
  "wpn\030\007 \001(\005\022\027\n\004goal\030\010 \001(\0132\t.Env.Goal\022\032\n\005en"
  "emy\030\t \001(\0132\013.Env.Entity\022\033\n\006missle\030\n \001(\0132\013"
  ".Env.Missle\032\366\001\n\006Entity\022\034\n\003dof\030\001 \001(\0132\017.En"
  "v.Entity.Dof\022#\n\003vel\030\002 \001(\0132\026.Env.Entity.V"
  "elocity3D\022\n\n\002id\030\003 \001(\005\032X\n\003Dof\022\013\n\003lat\030\001 \001("
  "\001\022\013\n\003lon\030\002 \001(\001\022\016\n\006height\030\003 \001(\001\022\013\n\003phi\030\004 "
  "\001(\001\022\r\n\005theta\030\005 \001(\001\022\013\n\003psi\030\006 \001(\001\032C\n\nVeloc"
  "ity3D\022\021\n\tvel_north\030\001 \001(\001\022\020\n\010vel_east\030\002 \001"
  "(\001\022\020\n\010vel_down\030\003 \001(\001\032/\n\006Missle\022\n\n\002id\030\001 \001"
  "(\005\022\014\n\004dist\030\002 \001(\001\022\013\n\003dir\030\003 \001(\001\0320\n\004Goal\022\013\n"
  "\003lat\030\001 \001(\001\022\013\n\003lon\030\002 \001(\001\022\016\n\006height\030\003 \001(\001\""
  "\256\001\n\006Action\022\017\n\007isReset\030\001 \001(\010\022 \n\005point\030\002 \001"
  "(\0132\021.Action.TrajPoint\022\016\n\006deploy\030\003 \001(\010\022\021\n"
  "\ttarget_id\030\004 \001(\005\032N\n\tTrajPoint\022\013\n\003lat\030\001 \001"
  "(\001\022\013\n\003lon\030\002 \001(\001\022\t\n\001h\030\003 \001(\001\022\013\n\003vel\030\004 \001(\001\022"
  "\017\n\007ref_phi\030\005 \001(\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_aimodel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_aimodel_2eproto = {
  false, false, 784, descriptor_table_protodef_aimodel_2eproto, "aimodel.proto", 
  &descriptor_table_aimodel_2eproto_once, nullptr, 0, 8,
  schemas, file_default_instances, TableStruct_aimodel_2eproto::offsets,
  file_level_metadata_aimodel_2eproto, file_level_enum_descriptors_aimodel_2eproto, file_level_service_descriptors_aimodel_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_aimodel_2eproto_getter() {
  return &descriptor_table_aimodel_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_aimodel_2eproto(&descriptor_table_aimodel_2eproto);

// ===================================================================

class Env_Entity_Dof::_Internal {
 public:
};

Env_Entity_Dof::Env_Entity_Dof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Env.Entity.Dof)
}
Env_Entity_Dof::Env_Entity_Dof(const Env_Entity_Dof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lat_, &from.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&psi_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(psi_));
  // @@protoc_insertion_point(copy_constructor:Env.Entity.Dof)
}

void Env_Entity_Dof::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&psi_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(psi_));
}

Env_Entity_Dof::~Env_Entity_Dof() {
  // @@protoc_insertion_point(destructor:Env.Entity.Dof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Env_Entity_Dof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Env_Entity_Dof::ArenaDtor(void* object) {
  Env_Entity_Dof* _this = reinterpret_cast< Env_Entity_Dof* >(object);
  (void)_this;
}
void Env_Entity_Dof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Env_Entity_Dof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Env_Entity_Dof::Clear() {
// @@protoc_insertion_point(message_clear_start:Env.Entity.Dof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&psi_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(psi_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Env_Entity_Dof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double lat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          lat_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double lon = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          lon_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double phi = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          phi_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double theta = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          theta_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double psi = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          psi_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Env_Entity_Dof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Env.Entity.Dof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (!(this->lat() <= 0 && this->lat() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_lat(), target);
  }

  // double lon = 2;
  if (!(this->lon() <= 0 && this->lon() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_lon(), target);
  }

  // double height = 3;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_height(), target);
  }

  // double phi = 4;
  if (!(this->phi() <= 0 && this->phi() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_phi(), target);
  }

  // double theta = 5;
  if (!(this->theta() <= 0 && this->theta() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_theta(), target);
  }

  // double psi = 6;
  if (!(this->psi() <= 0 && this->psi() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_psi(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Env.Entity.Dof)
  return target;
}

size_t Env_Entity_Dof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Env.Entity.Dof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lat = 1;
  if (!(this->lat() <= 0 && this->lat() >= 0)) {
    total_size += 1 + 8;
  }

  // double lon = 2;
  if (!(this->lon() <= 0 && this->lon() >= 0)) {
    total_size += 1 + 8;
  }

  // double height = 3;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    total_size += 1 + 8;
  }

  // double phi = 4;
  if (!(this->phi() <= 0 && this->phi() >= 0)) {
    total_size += 1 + 8;
  }

  // double theta = 5;
  if (!(this->theta() <= 0 && this->theta() >= 0)) {
    total_size += 1 + 8;
  }

  // double psi = 6;
  if (!(this->psi() <= 0 && this->psi() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Env_Entity_Dof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Env.Entity.Dof)
  GOOGLE_DCHECK_NE(&from, this);
  const Env_Entity_Dof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Env_Entity_Dof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Env.Entity.Dof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Env.Entity.Dof)
    MergeFrom(*source);
  }
}

void Env_Entity_Dof::MergeFrom(const Env_Entity_Dof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Env.Entity.Dof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.lat() <= 0 && from.lat() >= 0)) {
    _internal_set_lat(from._internal_lat());
  }
  if (!(from.lon() <= 0 && from.lon() >= 0)) {
    _internal_set_lon(from._internal_lon());
  }
  if (!(from.height() <= 0 && from.height() >= 0)) {
    _internal_set_height(from._internal_height());
  }
  if (!(from.phi() <= 0 && from.phi() >= 0)) {
    _internal_set_phi(from._internal_phi());
  }
  if (!(from.theta() <= 0 && from.theta() >= 0)) {
    _internal_set_theta(from._internal_theta());
  }
  if (!(from.psi() <= 0 && from.psi() >= 0)) {
    _internal_set_psi(from._internal_psi());
  }
}

void Env_Entity_Dof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Env.Entity.Dof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Env_Entity_Dof::CopyFrom(const Env_Entity_Dof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Env.Entity.Dof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Env_Entity_Dof::IsInitialized() const {
  return true;
}

void Env_Entity_Dof::InternalSwap(Env_Entity_Dof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Env_Entity_Dof, psi_)
      + sizeof(Env_Entity_Dof::psi_)
      - PROTOBUF_FIELD_OFFSET(Env_Entity_Dof, lat_)>(
          reinterpret_cast<char*>(&lat_),
          reinterpret_cast<char*>(&other->lat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Env_Entity_Dof::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[0]);
}

// ===================================================================

class Env_Entity_Velocity3D::_Internal {
 public:
};

Env_Entity_Velocity3D::Env_Entity_Velocity3D(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Env.Entity.Velocity3D)
}
Env_Entity_Velocity3D::Env_Entity_Velocity3D(const Env_Entity_Velocity3D& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&vel_north_, &from.vel_north_,
    static_cast<size_t>(reinterpret_cast<char*>(&vel_down_) -
    reinterpret_cast<char*>(&vel_north_)) + sizeof(vel_down_));
  // @@protoc_insertion_point(copy_constructor:Env.Entity.Velocity3D)
}

void Env_Entity_Velocity3D::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&vel_north_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&vel_down_) -
    reinterpret_cast<char*>(&vel_north_)) + sizeof(vel_down_));
}

Env_Entity_Velocity3D::~Env_Entity_Velocity3D() {
  // @@protoc_insertion_point(destructor:Env.Entity.Velocity3D)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Env_Entity_Velocity3D::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Env_Entity_Velocity3D::ArenaDtor(void* object) {
  Env_Entity_Velocity3D* _this = reinterpret_cast< Env_Entity_Velocity3D* >(object);
  (void)_this;
}
void Env_Entity_Velocity3D::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Env_Entity_Velocity3D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Env_Entity_Velocity3D::Clear() {
// @@protoc_insertion_point(message_clear_start:Env.Entity.Velocity3D)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vel_north_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vel_down_) -
      reinterpret_cast<char*>(&vel_north_)) + sizeof(vel_down_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Env_Entity_Velocity3D::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double vel_north = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          vel_north_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double vel_east = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          vel_east_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double vel_down = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          vel_down_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Env_Entity_Velocity3D::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Env.Entity.Velocity3D)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double vel_north = 1;
  if (!(this->vel_north() <= 0 && this->vel_north() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_vel_north(), target);
  }

  // double vel_east = 2;
  if (!(this->vel_east() <= 0 && this->vel_east() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_vel_east(), target);
  }

  // double vel_down = 3;
  if (!(this->vel_down() <= 0 && this->vel_down() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_vel_down(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Env.Entity.Velocity3D)
  return target;
}

size_t Env_Entity_Velocity3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Env.Entity.Velocity3D)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double vel_north = 1;
  if (!(this->vel_north() <= 0 && this->vel_north() >= 0)) {
    total_size += 1 + 8;
  }

  // double vel_east = 2;
  if (!(this->vel_east() <= 0 && this->vel_east() >= 0)) {
    total_size += 1 + 8;
  }

  // double vel_down = 3;
  if (!(this->vel_down() <= 0 && this->vel_down() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Env_Entity_Velocity3D::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Env.Entity.Velocity3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Env_Entity_Velocity3D* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Env_Entity_Velocity3D>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Env.Entity.Velocity3D)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Env.Entity.Velocity3D)
    MergeFrom(*source);
  }
}

void Env_Entity_Velocity3D::MergeFrom(const Env_Entity_Velocity3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Env.Entity.Velocity3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.vel_north() <= 0 && from.vel_north() >= 0)) {
    _internal_set_vel_north(from._internal_vel_north());
  }
  if (!(from.vel_east() <= 0 && from.vel_east() >= 0)) {
    _internal_set_vel_east(from._internal_vel_east());
  }
  if (!(from.vel_down() <= 0 && from.vel_down() >= 0)) {
    _internal_set_vel_down(from._internal_vel_down());
  }
}

void Env_Entity_Velocity3D::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Env.Entity.Velocity3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Env_Entity_Velocity3D::CopyFrom(const Env_Entity_Velocity3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Env.Entity.Velocity3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Env_Entity_Velocity3D::IsInitialized() const {
  return true;
}

void Env_Entity_Velocity3D::InternalSwap(Env_Entity_Velocity3D* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Env_Entity_Velocity3D, vel_down_)
      + sizeof(Env_Entity_Velocity3D::vel_down_)
      - PROTOBUF_FIELD_OFFSET(Env_Entity_Velocity3D, vel_north_)>(
          reinterpret_cast<char*>(&vel_north_),
          reinterpret_cast<char*>(&other->vel_north_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Env_Entity_Velocity3D::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[1]);
}

// ===================================================================

class Env_Entity::_Internal {
 public:
  static const ::Env_Entity_Dof& dof(const Env_Entity* msg);
  static const ::Env_Entity_Velocity3D& vel(const Env_Entity* msg);
};

const ::Env_Entity_Dof&
Env_Entity::_Internal::dof(const Env_Entity* msg) {
  return *msg->dof_;
}
const ::Env_Entity_Velocity3D&
Env_Entity::_Internal::vel(const Env_Entity* msg) {
  return *msg->vel_;
}
Env_Entity::Env_Entity(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Env.Entity)
}
Env_Entity::Env_Entity(const Env_Entity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dof()) {
    dof_ = new ::Env_Entity_Dof(*from.dof_);
  } else {
    dof_ = nullptr;
  }
  if (from._internal_has_vel()) {
    vel_ = new ::Env_Entity_Velocity3D(*from.vel_);
  } else {
    vel_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Env.Entity)
}

void Env_Entity::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&dof_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&dof_)) + sizeof(id_));
}

Env_Entity::~Env_Entity() {
  // @@protoc_insertion_point(destructor:Env.Entity)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Env_Entity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete dof_;
  if (this != internal_default_instance()) delete vel_;
}

void Env_Entity::ArenaDtor(void* object) {
  Env_Entity* _this = reinterpret_cast< Env_Entity* >(object);
  (void)_this;
}
void Env_Entity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Env_Entity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Env_Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:Env.Entity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && dof_ != nullptr) {
    delete dof_;
  }
  dof_ = nullptr;
  if (GetArenaForAllocation() == nullptr && vel_ != nullptr) {
    delete vel_;
  }
  vel_ = nullptr;
  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Env_Entity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Env.Entity.Dof dof = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Env.Entity.Velocity3D vel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vel(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Env_Entity::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Env.Entity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Env.Entity.Dof dof = 1;
  if (this->has_dof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dof(this), target, stream);
  }

  // .Env.Entity.Velocity3D vel = 2;
  if (this->has_vel()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vel(this), target, stream);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Env.Entity)
  return target;
}

size_t Env_Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Env.Entity)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Env.Entity.Dof dof = 1;
  if (this->has_dof()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dof_);
  }

  // .Env.Entity.Velocity3D vel = 2;
  if (this->has_vel()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vel_);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Env_Entity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Env.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  const Env_Entity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Env_Entity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Env.Entity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Env.Entity)
    MergeFrom(*source);
  }
}

void Env_Entity::MergeFrom(const Env_Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Env.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dof()) {
    _internal_mutable_dof()->::Env_Entity_Dof::MergeFrom(from._internal_dof());
  }
  if (from.has_vel()) {
    _internal_mutable_vel()->::Env_Entity_Velocity3D::MergeFrom(from._internal_vel());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Env_Entity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Env.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Env_Entity::CopyFrom(const Env_Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Env.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Env_Entity::IsInitialized() const {
  return true;
}

void Env_Entity::InternalSwap(Env_Entity* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Env_Entity, id_)
      + sizeof(Env_Entity::id_)
      - PROTOBUF_FIELD_OFFSET(Env_Entity, dof_)>(
          reinterpret_cast<char*>(&dof_),
          reinterpret_cast<char*>(&other->dof_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Env_Entity::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[2]);
}

// ===================================================================

class Env_Missle::_Internal {
 public:
};

Env_Missle::Env_Missle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Env.Missle)
}
Env_Missle::Env_Missle(const Env_Missle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&dist_, &from.dist_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&dist_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:Env.Missle)
}

void Env_Missle::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&dist_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&dist_)) + sizeof(id_));
}

Env_Missle::~Env_Missle() {
  // @@protoc_insertion_point(destructor:Env.Missle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Env_Missle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Env_Missle::ArenaDtor(void* object) {
  Env_Missle* _this = reinterpret_cast< Env_Missle* >(object);
  (void)_this;
}
void Env_Missle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Env_Missle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Env_Missle::Clear() {
// @@protoc_insertion_point(message_clear_start:Env.Missle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&dist_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Env_Missle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double dist = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          dist_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double dir = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          dir_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Env_Missle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Env.Missle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // double dist = 2;
  if (!(this->dist() <= 0 && this->dist() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_dist(), target);
  }

  // double dir = 3;
  if (!(this->dir() <= 0 && this->dir() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Env.Missle)
  return target;
}

size_t Env_Missle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Env.Missle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double dist = 2;
  if (!(this->dist() <= 0 && this->dist() >= 0)) {
    total_size += 1 + 8;
  }

  // double dir = 3;
  if (!(this->dir() <= 0 && this->dir() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Env_Missle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Env.Missle)
  GOOGLE_DCHECK_NE(&from, this);
  const Env_Missle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Env_Missle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Env.Missle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Env.Missle)
    MergeFrom(*source);
  }
}

void Env_Missle::MergeFrom(const Env_Missle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Env.Missle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.dist() <= 0 && from.dist() >= 0)) {
    _internal_set_dist(from._internal_dist());
  }
  if (!(from.dir() <= 0 && from.dir() >= 0)) {
    _internal_set_dir(from._internal_dir());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Env_Missle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Env.Missle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Env_Missle::CopyFrom(const Env_Missle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Env.Missle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Env_Missle::IsInitialized() const {
  return true;
}

void Env_Missle::InternalSwap(Env_Missle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Env_Missle, id_)
      + sizeof(Env_Missle::id_)
      - PROTOBUF_FIELD_OFFSET(Env_Missle, dist_)>(
          reinterpret_cast<char*>(&dist_),
          reinterpret_cast<char*>(&other->dist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Env_Missle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[3]);
}

// ===================================================================

class Env_Goal::_Internal {
 public:
};

Env_Goal::Env_Goal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Env.Goal)
}
Env_Goal::Env_Goal(const Env_Goal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lat_, &from.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:Env.Goal)
}

void Env_Goal::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(height_));
}

Env_Goal::~Env_Goal() {
  // @@protoc_insertion_point(destructor:Env.Goal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Env_Goal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Env_Goal::ArenaDtor(void* object) {
  Env_Goal* _this = reinterpret_cast< Env_Goal* >(object);
  (void)_this;
}
void Env_Goal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Env_Goal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Env_Goal::Clear() {
// @@protoc_insertion_point(message_clear_start:Env.Goal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Env_Goal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double lat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          lat_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double lon = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          lon_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Env_Goal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Env.Goal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (!(this->lat() <= 0 && this->lat() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_lat(), target);
  }

  // double lon = 2;
  if (!(this->lon() <= 0 && this->lon() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_lon(), target);
  }

  // double height = 3;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Env.Goal)
  return target;
}

size_t Env_Goal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Env.Goal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lat = 1;
  if (!(this->lat() <= 0 && this->lat() >= 0)) {
    total_size += 1 + 8;
  }

  // double lon = 2;
  if (!(this->lon() <= 0 && this->lon() >= 0)) {
    total_size += 1 + 8;
  }

  // double height = 3;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Env_Goal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Env.Goal)
  GOOGLE_DCHECK_NE(&from, this);
  const Env_Goal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Env_Goal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Env.Goal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Env.Goal)
    MergeFrom(*source);
  }
}

void Env_Goal::MergeFrom(const Env_Goal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Env.Goal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.lat() <= 0 && from.lat() >= 0)) {
    _internal_set_lat(from._internal_lat());
  }
  if (!(from.lon() <= 0 && from.lon() >= 0)) {
    _internal_set_lon(from._internal_lon());
  }
  if (!(from.height() <= 0 && from.height() >= 0)) {
    _internal_set_height(from._internal_height());
  }
}

void Env_Goal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Env.Goal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Env_Goal::CopyFrom(const Env_Goal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Env.Goal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Env_Goal::IsInitialized() const {
  return true;
}

void Env_Goal::InternalSwap(Env_Goal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Env_Goal, height_)
      + sizeof(Env_Goal::height_)
      - PROTOBUF_FIELD_OFFSET(Env_Goal, lat_)>(
          reinterpret_cast<char*>(&lat_),
          reinterpret_cast<char*>(&other->lat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Env_Goal::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[4]);
}

// ===================================================================

class Env::_Internal {
 public:
  static const ::Env_Entity& self(const Env* msg);
  static const ::Env_Goal& goal(const Env* msg);
  static const ::Env_Entity& enemy(const Env* msg);
  static const ::Env_Missle& missle(const Env* msg);
};

const ::Env_Entity&
Env::_Internal::self(const Env* msg) {
  return *msg->self_;
}
const ::Env_Goal&
Env::_Internal::goal(const Env* msg) {
  return *msg->goal_;
}
const ::Env_Entity&
Env::_Internal::enemy(const Env* msg) {
  return *msg->enemy_;
}
const ::Env_Missle&
Env::_Internal::missle(const Env* msg) {
  return *msg->missle_;
}
Env::Env(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Env)
}
Env::Env(const Env& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_self()) {
    self_ = new ::Env_Entity(*from.self_);
  } else {
    self_ = nullptr;
  }
  if (from._internal_has_goal()) {
    goal_ = new ::Env_Goal(*from.goal_);
  } else {
    goal_ = nullptr;
  }
  if (from._internal_has_enemy()) {
    enemy_ = new ::Env_Entity(*from.enemy_);
  } else {
    enemy_ = nullptr;
  }
  if (from._internal_has_missle()) {
    missle_ = new ::Env_Missle(*from.missle_);
  } else {
    missle_ = nullptr;
  }
  ::memcpy(&red_crash_, &from.red_crash_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_wpn_) -
    reinterpret_cast<char*>(&red_crash_)) + sizeof(num_wpn_));
  // @@protoc_insertion_point(copy_constructor:Env)
}

void Env::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&self_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_wpn_) -
    reinterpret_cast<char*>(&self_)) + sizeof(num_wpn_));
}

Env::~Env() {
  // @@protoc_insertion_point(destructor:Env)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Env::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete self_;
  if (this != internal_default_instance()) delete goal_;
  if (this != internal_default_instance()) delete enemy_;
  if (this != internal_default_instance()) delete missle_;
}

void Env::ArenaDtor(void* object) {
  Env* _this = reinterpret_cast< Env* >(object);
  (void)_this;
}
void Env::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Env::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Env::Clear() {
// @@protoc_insertion_point(message_clear_start:Env)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && self_ != nullptr) {
    delete self_;
  }
  self_ = nullptr;
  if (GetArenaForAllocation() == nullptr && goal_ != nullptr) {
    delete goal_;
  }
  goal_ = nullptr;
  if (GetArenaForAllocation() == nullptr && enemy_ != nullptr) {
    delete enemy_;
  }
  enemy_ = nullptr;
  if (GetArenaForAllocation() == nullptr && missle_ != nullptr) {
    delete missle_;
  }
  missle_ = nullptr;
  ::memset(&red_crash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_wpn_) -
      reinterpret_cast<char*>(&red_crash_)) + sizeof(num_wpn_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Env::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool red_crash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          red_crash_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool blue_crash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          blue_crash_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool radar_on = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          radar_on_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool detect_enemy = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          detect_enemy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool detect_missle = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          detect_missle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Env.Entity self = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_self(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 num_wpn = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          num_wpn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Env.Goal goal = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_goal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Env.Entity enemy = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_enemy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Env.Missle missle = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_missle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Env::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Env)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool red_crash = 1;
  if (this->red_crash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_red_crash(), target);
  }

  // bool blue_crash = 2;
  if (this->blue_crash() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_blue_crash(), target);
  }

  // bool radar_on = 3;
  if (this->radar_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_radar_on(), target);
  }

  // bool detect_enemy = 4;
  if (this->detect_enemy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_detect_enemy(), target);
  }

  // bool detect_missle = 5;
  if (this->detect_missle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_detect_missle(), target);
  }

  // .Env.Entity self = 6;
  if (this->has_self()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::self(this), target, stream);
  }

  // int32 num_wpn = 7;
  if (this->num_wpn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_num_wpn(), target);
  }

  // .Env.Goal goal = 8;
  if (this->has_goal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::goal(this), target, stream);
  }

  // .Env.Entity enemy = 9;
  if (this->has_enemy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::enemy(this), target, stream);
  }

  // .Env.Missle missle = 10;
  if (this->has_missle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::missle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Env)
  return target;
}

size_t Env::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Env)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Env.Entity self = 6;
  if (this->has_self()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *self_);
  }

  // .Env.Goal goal = 8;
  if (this->has_goal()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *goal_);
  }

  // .Env.Entity enemy = 9;
  if (this->has_enemy()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *enemy_);
  }

  // .Env.Missle missle = 10;
  if (this->has_missle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *missle_);
  }

  // bool red_crash = 1;
  if (this->red_crash() != 0) {
    total_size += 1 + 1;
  }

  // bool blue_crash = 2;
  if (this->blue_crash() != 0) {
    total_size += 1 + 1;
  }

  // bool radar_on = 3;
  if (this->radar_on() != 0) {
    total_size += 1 + 1;
  }

  // bool detect_enemy = 4;
  if (this->detect_enemy() != 0) {
    total_size += 1 + 1;
  }

  // bool detect_missle = 5;
  if (this->detect_missle() != 0) {
    total_size += 1 + 1;
  }

  // int32 num_wpn = 7;
  if (this->num_wpn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_wpn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Env::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Env)
  GOOGLE_DCHECK_NE(&from, this);
  const Env* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Env>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Env)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Env)
    MergeFrom(*source);
  }
}

void Env::MergeFrom(const Env& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Env)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_self()) {
    _internal_mutable_self()->::Env_Entity::MergeFrom(from._internal_self());
  }
  if (from.has_goal()) {
    _internal_mutable_goal()->::Env_Goal::MergeFrom(from._internal_goal());
  }
  if (from.has_enemy()) {
    _internal_mutable_enemy()->::Env_Entity::MergeFrom(from._internal_enemy());
  }
  if (from.has_missle()) {
    _internal_mutable_missle()->::Env_Missle::MergeFrom(from._internal_missle());
  }
  if (from.red_crash() != 0) {
    _internal_set_red_crash(from._internal_red_crash());
  }
  if (from.blue_crash() != 0) {
    _internal_set_blue_crash(from._internal_blue_crash());
  }
  if (from.radar_on() != 0) {
    _internal_set_radar_on(from._internal_radar_on());
  }
  if (from.detect_enemy() != 0) {
    _internal_set_detect_enemy(from._internal_detect_enemy());
  }
  if (from.detect_missle() != 0) {
    _internal_set_detect_missle(from._internal_detect_missle());
  }
  if (from.num_wpn() != 0) {
    _internal_set_num_wpn(from._internal_num_wpn());
  }
}

void Env::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Env)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Env::CopyFrom(const Env& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Env)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Env::IsInitialized() const {
  return true;
}

void Env::InternalSwap(Env* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Env, num_wpn_)
      + sizeof(Env::num_wpn_)
      - PROTOBUF_FIELD_OFFSET(Env, self_)>(
          reinterpret_cast<char*>(&self_),
          reinterpret_cast<char*>(&other->self_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Env::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[5]);
}

// ===================================================================

class Action_TrajPoint::_Internal {
 public:
};

Action_TrajPoint::Action_TrajPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Action.TrajPoint)
}
Action_TrajPoint::Action_TrajPoint(const Action_TrajPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lat_, &from.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&ref_phi_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(ref_phi_));
  // @@protoc_insertion_point(copy_constructor:Action.TrajPoint)
}

void Action_TrajPoint::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ref_phi_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(ref_phi_));
}

Action_TrajPoint::~Action_TrajPoint() {
  // @@protoc_insertion_point(destructor:Action.TrajPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Action_TrajPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Action_TrajPoint::ArenaDtor(void* object) {
  Action_TrajPoint* _this = reinterpret_cast< Action_TrajPoint* >(object);
  (void)_this;
}
void Action_TrajPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Action_TrajPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Action_TrajPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:Action.TrajPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ref_phi_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(ref_phi_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Action_TrajPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double lat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          lat_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double lon = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          lon_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double h = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          h_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double vel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          vel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double ref_phi = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          ref_phi_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Action_TrajPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Action.TrajPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (!(this->lat() <= 0 && this->lat() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_lat(), target);
  }

  // double lon = 2;
  if (!(this->lon() <= 0 && this->lon() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_lon(), target);
  }

  // double h = 3;
  if (!(this->h() <= 0 && this->h() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_h(), target);
  }

  // double vel = 4;
  if (!(this->vel() <= 0 && this->vel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_vel(), target);
  }

  // double ref_phi = 5;
  if (!(this->ref_phi() <= 0 && this->ref_phi() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_ref_phi(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Action.TrajPoint)
  return target;
}

size_t Action_TrajPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Action.TrajPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lat = 1;
  if (!(this->lat() <= 0 && this->lat() >= 0)) {
    total_size += 1 + 8;
  }

  // double lon = 2;
  if (!(this->lon() <= 0 && this->lon() >= 0)) {
    total_size += 1 + 8;
  }

  // double h = 3;
  if (!(this->h() <= 0 && this->h() >= 0)) {
    total_size += 1 + 8;
  }

  // double vel = 4;
  if (!(this->vel() <= 0 && this->vel() >= 0)) {
    total_size += 1 + 8;
  }

  // double ref_phi = 5;
  if (!(this->ref_phi() <= 0 && this->ref_phi() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action_TrajPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Action.TrajPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Action_TrajPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Action_TrajPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Action.TrajPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Action.TrajPoint)
    MergeFrom(*source);
  }
}

void Action_TrajPoint::MergeFrom(const Action_TrajPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Action.TrajPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.lat() <= 0 && from.lat() >= 0)) {
    _internal_set_lat(from._internal_lat());
  }
  if (!(from.lon() <= 0 && from.lon() >= 0)) {
    _internal_set_lon(from._internal_lon());
  }
  if (!(from.h() <= 0 && from.h() >= 0)) {
    _internal_set_h(from._internal_h());
  }
  if (!(from.vel() <= 0 && from.vel() >= 0)) {
    _internal_set_vel(from._internal_vel());
  }
  if (!(from.ref_phi() <= 0 && from.ref_phi() >= 0)) {
    _internal_set_ref_phi(from._internal_ref_phi());
  }
}

void Action_TrajPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Action.TrajPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action_TrajPoint::CopyFrom(const Action_TrajPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Action.TrajPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action_TrajPoint::IsInitialized() const {
  return true;
}

void Action_TrajPoint::InternalSwap(Action_TrajPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Action_TrajPoint, ref_phi_)
      + sizeof(Action_TrajPoint::ref_phi_)
      - PROTOBUF_FIELD_OFFSET(Action_TrajPoint, lat_)>(
          reinterpret_cast<char*>(&lat_),
          reinterpret_cast<char*>(&other->lat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Action_TrajPoint::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[6]);
}

// ===================================================================

class Action::_Internal {
 public:
  static const ::Action_TrajPoint& point(const Action* msg);
};

const ::Action_TrajPoint&
Action::_Internal::point(const Action* msg) {
  return *msg->point_;
}
Action::Action(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Action)
}
Action::Action(const Action& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_point()) {
    point_ = new ::Action_TrajPoint(*from.point_);
  } else {
    point_ = nullptr;
  }
  ::memcpy(&isreset_, &from.isreset_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_id_) -
    reinterpret_cast<char*>(&isreset_)) + sizeof(target_id_));
  // @@protoc_insertion_point(copy_constructor:Action)
}

void Action::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&point_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&target_id_) -
    reinterpret_cast<char*>(&point_)) + sizeof(target_id_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:Action)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Action::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete point_;
}

void Action::ArenaDtor(void* object) {
  Action* _this = reinterpret_cast< Action* >(object);
  (void)_this;
}
void Action::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && point_ != nullptr) {
    delete point_;
  }
  point_ = nullptr;
  ::memset(&isreset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_id_) -
      reinterpret_cast<char*>(&isreset_)) + sizeof(target_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Action::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isReset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          isreset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Action.TrajPoint point = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_point(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool deploy = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          deploy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 target_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          target_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Action::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isReset = 1;
  if (this->isreset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_isreset(), target);
  }

  // .Action.TrajPoint point = 2;
  if (this->has_point()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::point(this), target, stream);
  }

  // bool deploy = 3;
  if (this->deploy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_deploy(), target);
  }

  // int32 target_id = 4;
  if (this->target_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_target_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Action)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Action.TrajPoint point = 2;
  if (this->has_point()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *point_);
  }

  // bool isReset = 1;
  if (this->isreset() != 0) {
    total_size += 1 + 1;
  }

  // bool deploy = 3;
  if (this->deploy() != 0) {
    total_size += 1 + 1;
  }

  // int32 target_id = 4;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_target_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Action>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Action)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_point()) {
    _internal_mutable_point()->::Action_TrajPoint::MergeFrom(from._internal_point());
  }
  if (from.isreset() != 0) {
    _internal_set_isreset(from._internal_isreset());
  }
  if (from.deploy() != 0) {
    _internal_set_deploy(from._internal_deploy());
  }
  if (from.target_id() != 0) {
    _internal_set_target_id(from._internal_target_id());
  }
}

void Action::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::InternalSwap(Action* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Action, target_id_)
      + sizeof(Action::target_id_)
      - PROTOBUF_FIELD_OFFSET(Action, point_)>(
          reinterpret_cast<char*>(&point_),
          reinterpret_cast<char*>(&other->point_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Action::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_aimodel_2eproto_getter, &descriptor_table_aimodel_2eproto_once,
      file_level_metadata_aimodel_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Env_Entity_Dof* Arena::CreateMaybeMessage< ::Env_Entity_Dof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Env_Entity_Dof >(arena);
}
template<> PROTOBUF_NOINLINE ::Env_Entity_Velocity3D* Arena::CreateMaybeMessage< ::Env_Entity_Velocity3D >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Env_Entity_Velocity3D >(arena);
}
template<> PROTOBUF_NOINLINE ::Env_Entity* Arena::CreateMaybeMessage< ::Env_Entity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Env_Entity >(arena);
}
template<> PROTOBUF_NOINLINE ::Env_Missle* Arena::CreateMaybeMessage< ::Env_Missle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Env_Missle >(arena);
}
template<> PROTOBUF_NOINLINE ::Env_Goal* Arena::CreateMaybeMessage< ::Env_Goal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Env_Goal >(arena);
}
template<> PROTOBUF_NOINLINE ::Env* Arena::CreateMaybeMessage< ::Env >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Env >(arena);
}
template<> PROTOBUF_NOINLINE ::Action_TrajPoint* Arena::CreateMaybeMessage< ::Action_TrajPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Action_TrajPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::Action* Arena::CreateMaybeMessage< ::Action >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Action >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
